alias functionNum R1;
alias currentPID R2;
if(functionNum==3) then
    multipush(R1,R2,R3);
    R1=8;
    R2=currentPID;
    call MOD_0;
    multipop(R1,R2,R3);
    print R3;
    multipush(R1,R2,R3);
    R1=9;
    R2=currentPID;
    call MOD_0;
    multipop(R1,R2,R3);
    return;
else
    if(functionNum==4) then
         multipush(R1,R2,R3);
         R1=8;
         R2=currentPID;
         call MOD_0;
         multipop(R1,R2,R3);
         read;
         [PROCESS_TABLE+(currentPID*16)+4]=WAIT_TERMINAL;
         multipush(R1,R2,R3);
         call MOD_5;
         multipop(R1,R2,R3);

         alias physicalAddrRetVal R6;
         physicalAddrRetVal = ([PTBR + 2 * (R3)/ 512] * 512) + ((R3) % 512);
         alias value R7;
         value=[PROCESS_TABLE+(currentPID*16)+8];
         [physicalAddrRetVal]=value;
         return;
    endif;
endif;

if(functionNum==2) then
    multipush(R1,R2,R3,R4);
    R1=3;
    R2=currentPID;
    call MOD_0;
    multipop(R1,R2,R3,R4);

    [DISK_STATUS_TABLE+1]=0;
    [DISK_STATUS_TABLE+2]=R3;
    [DISK_STATUS_TABLE+3]=R4;
    load(R3,R4);

    [PROCESS_TABLE+(currentPID*16)+4]=WAIT_DISK;
    multipush(R1,R2,R3,R4);
    call MOD_5;
    multipop(R1,R2,R3,R4);
    return;
endif;

if(functionNum==1) then
    multipush(R1,R2,R3,R4);
    R1=3;
    R2=[SYSTEM_STATUS_TABLE+1];
    call MOD_0;
    multipop(R1,R2,R3,R4);

    [DISK_STATUS_TABLE+1]=1;
    [DISK_STATUS_TABLE+2]=R3;
    [DISK_STATUS_TABLE+3]=R4;
    store(R3,R4);

    [PROCESS_TABLE+(currentPID*16)+4]=WAIT_DISK;
    multipush(R1,R2,R3,R4);
    call MOD_5;
    multipop(R1,R2,R3,R4);
    return;
endif;
